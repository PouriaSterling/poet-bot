service: poet-bot

package:
  exclude:
    - "**"
  include:
    - node_modules/**
    - src/**

provider:
  name: aws
  region: ap-southeast-2
  stage: ${opt:stage, 'dev'}
  runtime: nodejs12.x
  environment:
    STAGE: ${self:provider.stage}
    TOPIC_ARN: !Ref PoetTopic
    CLIENT_ID: ${file(local.yml):${self:provider.stage}.slack.clientId}
    CLIENT_SECRET: ${file(local.yml):${self:provider.stage}.slack.clientSecret}
    SLACK_BOT_ID: ${file(local.yml):${self:provider.stage}.slack.botId}
    LUIS_URL: ${file(local.yml):${self:provider.stage}.luis.url}
    ACCESS_TOKEN_TABLE_NAME: ${self:resources.Resources.accessTokenTable.Properties.TableName}
    CHANNEL_CONTEXT_TABLE_NAME: ${self:resources.Resources.jiraIssueIDTable.Properties.TableName}
    JIRA_NAME: ${file(local.yml):${self:provider.stage}.jira.name}
    JIRA_PASSWORD: ${file(local.yml):${self:provider.stage}.jira.password}
    JIRA_URL: ${file(local.yml):${self:provider.stage}.jira.url}
    JIRA_STORYPOINTS: ${file(local.yml):${self:provider.stage}.jira.storypointsfieldID}
    JENKINS_AUTHORISATION_HEADER: ${file(local.yml):${self:provider.stage}.jenkins.authorisationHeader}
    JENKINS_URL: ${file(local.yml):${self:provider.stage}.jenkins.url}
    JENKINS_DEPLOY_JOB_PATH: ${file(local.yml):${self:provider.stage}.jenkins.deployJobPath}
    JIRA_ISSUE_ENDPOINT: "/rest/api/latest/issue/"
    JIRA_SEARCH_ENDPOINT: "/rest/api/latest/search/"
    JIRA_PROJECT_ENDPOINT: "/rest/api/latest/project/"
    JIRA_BOARD_ENDPOINT: "/rest/agile/latest/board/"
    JIRA_RAPIDVIEW_CONFIG_ENDPOINT: "/rest/greenhopper/1.0/rapidviewconfig/editmodel.json?rapidViewId="
    JIRA_REPORT_INFO_ENDPOINT: "/rest/greenhopper/1.0/rapid/charts/controlchart.json?rapidViewId="
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - SNS:Publish
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:*
        - "*"

functions:
  install:
    handler: src/handler.install
    events:
      - http: GET install
  authorized:
    handler: src/handler.authorized
    events:
      - http: GET authorized
  receptionist:
    handler: src/handler.receptionist
    events:
      - http: POST receptionist
  event:
    handler: src/handler.event
    timeout: 20
    events:
      - snsSqs:
            name: PoetEvent
            topicArn: !Ref PoetTopic
            batchSize: 1 # Optional - default value is 10
            maxRetryCount: 2 # Optional - default value is 5
            
resources:
  Resources:
    accessTokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-accessTokenTable
        AttributeDefinitions:
          - AttributeName: teamId
            AttributeType: S
        KeySchema:
          - AttributeName: teamId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    jiraIssueIDTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-channelContextTable
        AttributeDefinitions:
          - AttributeName: channel
            AttributeType: S
        KeySchema:
          - AttributeName: channel
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    PoetTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-topic

plugins:
  - serverless-offline
  - "@agiledigital/serverless-sns-sqs-lambda"
